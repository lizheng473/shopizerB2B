/*
 * Licensed to csti consulting 
 * You may obtain a copy of the License at
 *
 * http://www.csticonsulting.com
 * Copyright (c) 2006-Aug 24, 2010 Consultation CS-TI inc. 
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package com.salesmanager.core.entity.reference;

// Generated May 25, 2009 12:08:19 PM by Hibernate Tools 3.2.0.beta8

/**
 * DynamicLabelDescriptionId generated by hbm2java
 */
public class DynamicLabelDescriptionId implements java.io.Serializable {

	// Fields

	private long dynamicLabelId;
	private int languageId;
	private DynamicLabel dynamicLabel;

	// Constructors

	/** default constructor */
	public DynamicLabelDescriptionId() {
	}

	/** full constructor */
	public DynamicLabelDescriptionId(long dynamicLabelId, int languageId) {
		this.dynamicLabelId = dynamicLabelId;
		this.languageId = languageId;
	}

	// Property accessors
	public long getDynamicLabelId() {
		return this.dynamicLabelId;
	}

	public void setDynamicLabelId(long dynamicLabelId) {
		this.dynamicLabelId = dynamicLabelId;
	}

	public int getLanguageId() {
		return this.languageId;
	}

	public void setLanguageId(int languageId) {
		this.languageId = languageId;
	}

	@Override
	public int hashCode() {
		final int PRIME = 31;
		int result = 1;
		result = PRIME * result
				+ (int) (dynamicLabelId ^ (dynamicLabelId >>> 32));
		result = PRIME * result + languageId;
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		final DynamicLabelDescriptionId other = (DynamicLabelDescriptionId) obj;
		if (dynamicLabelId != other.dynamicLabelId)
			return false;
		if (languageId != other.languageId)
			return false;
		return true;
	}

	public DynamicLabel getDynamicLabel() {
		return dynamicLabel;
	}

	public void setDynamicLabel(DynamicLabel dynamicLabel) {
		this.dynamicLabel = dynamicLabel;
	}

}
